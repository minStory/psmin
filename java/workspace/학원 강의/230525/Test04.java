package day_0525;

import java.util.Scanner;

public class Test04 {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int n = 0;
		int arr[] = new int[10000];
		while (true) {
			n = sc.nextInt();
			if(n==-1) { break; }
			int cnt = 0;
			int temp = 1;
			int sum = 0;
			while (temp < n) {
				if (n % temp == 0) {
					arr[cnt] = temp;
					cnt++;
				}
				temp++;
			}
			for (int i = 0; i < cnt; i++) {
				sum += arr[i];
			}
			if (sum == n) {
				System.out.print(sum + " = ");
				for (int i = 0; i < cnt; i++) {
					if (i == cnt - 1) {
						System.out.println(arr[i]);
					} else {
						System.out.print(arr[i] + " + ");
					}
				}
				System.out.println();
			} else {
				System.out.println(n + " is NOT perfect.");
			}
		}
		System.out.println("프로그램을 종료합니다.");

	}

}
//어떤 숫자 n이 자신을 제외한 모든 약수들의 합과 같으면, 그 수를 완전수라고 한다.
//예를 들어 6은 6 = 1 + 2 + 3 으로 완전수이다.
//n이 완전수인지 아닌지 판단해주는 프로그램을 작성하라.
//
//입력
//입력은 테스트 케이스마다 한 줄 간격으로 n이 주어진다. (2 < n < 100,000)
//
//입력의 마지막엔 -1이 주어진다.
//
//출력
//테스트케이스 마다 한줄에 하나씩 출력해야 한다.
//n이 완전수라면, n을 n이 아닌 약수들의 합으로 나타내어 출력한다(예제 출력 참고).
//이때, 약수들은 오름차순으로 나열해야 한다.
//n이 완전수가 아니라면 n is NOT perfect. 를 출력한다.
//
//6
//12
//28
//-1
//
//6 = 1 + 2 + 3
//12 is NOT perfect.
//28 = 1 + 2 + 4 + 7 + 14