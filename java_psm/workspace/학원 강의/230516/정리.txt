인스턴스 = 객체  

클래스 == 틀, 도안

클래스를 통해서 만들어진 객체 하나를 인스턴스라고 한다 

클래스의 타입으로 선언되었을 때 객체라고 부르고, 그 객체가 메모리에 할당되어 실제 사용될 때는 인스턴스라고 부름 

소스파일 클래스 파일

소스파일 --> 사람이 보기 편한 코드

클래스 파일  --> 컴파일해서 컴퓨터가 보기 편한 코드 

컴파일  --> 컴퓨터가 보기 편하게 만드는 과정 바이트 코드 

참조변수  -> 주소를 저장하는 변수
	-> 기본 자료형 빼고는 다 참조변수 

객체 배열  
Tv[] tvarr = new Tv[3]

tvarr[0] = new Tv();
tvarr[1] = new Tv();
tvarr[2] = new Tv();

Tv[] tvarr = { new Tv(), new Tv(), new Tv()};


클래스 변수, 인스턴스 변수, 지역변수
--> 변수의 선언 위치
--> 변수가 어디에 선언 되었는지 확인하는 것이 매우 중요
--> 멤버변수를 제외한 나머지 변수들은 모두 지역 변수이며, 멤버변수 중 static이 붙은 것은 클래스변수, 붙지 않으면 인스턴스 변수이다 

인스턴스 변수 --> 클래스영역에 생성 인스턴스를 생성해야 하고 
인스턴스 마다 별도의 저장공간을 가지므로 서로 다른 값을 가질수 있다, 
인스턴스마다 고유한 상태를 유지해야하는 속성의 경우 인스턴스 변수로 선언한다.

클래스 변수 --> 인스턴스 변수 앞에 static붙여서 만들고  모든 인스턴스가 공통된 저장공안(변수)을 공유하게 된다 =, 
한클래스의 모든 인스턴스들이 공통적인 값을 유지해야 하는 경우 사용
'클래스이름.클래스변수' 

지역변수--> 메서드 내에서만 사용가능 메서드 종료시 소멸되어 사용 불가능 for, if { } 벗어나면 소멸 되아 사용 불가능~!


메서드--> 작업을 수행하는데 필요한 값만 넣고 원하는 결과를 얻기만 하면 된다.  메서드가 내부적으로 어떤 과정을 거쳐 결과를 만들어내는지는 전혀 몰라도 상관없음
 --> 메서드에 널을 값(입력)과 반환하는 결과(출력)만 알면 됨
--> 블랙박스

메서드는 크게 선언부와 구현부로 이루어져 있다.


int add (int x, int y) {
	int sum = x + y;

	return sum;

void print99danAll() {
	for(int i = 1; i<=9; i ++) {
		for(int j = 2;j<=9;j++) {
			sysout(j+ " *" + i+ "=" + (j*i) + " ")
}
sysout();
}
}
      

int x,y;


return문
일치하거나 적어도 자동 형변환이 가능한 것

선언할 수 있는 매개변수와 달리 return문은 단 하나의 값만 반환할 수 있는데, 메서드로의 입력(매개변수)은 여러 개일 수 있어도 출력(반환값)은 최대 하나만 허용한는 것이다.

카드 클래스 
속성 -->무늬 숫자 폭 넓이
무늬 --> 인스턴스 변수
숫자 --> 인스턴스 변수

폭 --> 클래스 변수
넓이 --> 클래스 변수 

인스턴스 변수는 인스턴스가 생성될때 마다 생성되므로 인스턴스가마다 각기 다른 값을 유지 할 수 있지만, 클래스 변수는 모든 인스턴스가 하나의 저장공간을 공유하므로, 항상 공통된 값을 갖는다.



































