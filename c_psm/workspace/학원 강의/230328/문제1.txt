곱셈연산자는 피연산자가 두개이고
포인터 연산자는 피연자가 한 개인 단항 연사자 
ptr *int

문제1
int형 변수 num1과  num2를 선언과 동시에 각각 10 20으로 초기화 하고, int형 포인터 변수 ptr1과 ptr2를 각각 선언하여 num1과 num2를 가리키게 하자. 그리고 이 상태에서 포인터 변수 ptr1과 ptr2를 이용해서 num1의 값을 10 증가시키고, num2의 값을 10 감소시키자 이제 두 포인터 변수 ptr1과 ptr2가 가리키는 대상을 서로 바꾸자 즉 포인터 변수 ptr1 이 num2를 가리키고 ptr2가 num1을 가리킨다  그리고 마지막으로 ptr1과 ptr2가 가리키는 변수에 저장된 값을 출력하자

포인터 널 포인터

int* ptr;
*ptr=200;
int* ptr1 = 0;
int* ptr2 = NULL  --> NULL은 숫자 0을 의미한다.(0은 0번지를 뜻하는 것이 아니고, 아무것도 가리키지 않는다는 의미로 해서함)


포인터와 배열의 관계
둘 다 주소를 가키는데 포인터는 변수, 배열은 상수 
배열은 주소 바꾸기 X
배열의 이름은 포인터 변수 역할을 하며 배열이 시작되는 메모리의 주소를 확인할 수 있습니다. 그러나 배열의 이름은 값을 저장할 수는 없습니다.

 a = 5
++a
p(a)-->6

*(++ptr)=20;  //ptr에 저장된 값 자체를 변경  -->21 20 저장된 값이 4바이트 증가하는거구요
-->
*(ptr+1)=20;  //ptr에 저장된 값은 변경되지 않음
-->

길이 5인int형 배열 arr 선언하고 12345초기화
이 배열의 첫 번째 요소를 가리키는 포인터 변수 ptr을 선언한다.  그 다음 포인터 변수 ptr에 저장된 값을 증가시키는 형태의 연산을 기반으로 배열요소에 접근하면서 모든 배열요소의 값을 2씩 증가시키고 정상적으로 증가가 이뤄졌는지 출력한다































