-- 과제 --------------------------------------
-- 1. 사원이름, 사원직책, 사원급여 조회.
select ename "사원명", job "직책", sal "급여"
from emp;

-- 2. 사수번호가 7839인 사원 번호, 이름, 입사날짜 조회.
select empno "사원번호", ename "사원명", hiredate "입사일"
from emp
where mgr = 7839;

-- 3. 급여가 3000 이하인 사원의 모든 정보 조회.
select *
from emp
where sal <= 3000;

-- 4. 사원이름, 부서번호, 부서이름, 부서 근무지 조회.
select e.ename "사원명", e.empno "사원번호", d.dname "부서명", d.loc "근무지역"
from emp as e
inner join dept as d
on e.deptno = d.deptno;

-- 5. 부서별 급여합계, 부서이름 조회.
select sum(sal) "급여합계", d.dname "부서명"
from emp as e 
inner join dept as d
on e.deptno = d.deptno
group by d.dname;

-- 6. 부서 근무지가 NEW YORK이고, 직책이 MANAGER인 사원의 이름, 급여 조회.
select e.ename "사원명", e.sal "급여"
from emp as e
inner join dept as d
on e.deptno = d.deptno
where d.loc = "new york";

-- 7. 1983년 이후 입사한 사원의 보너스가 null이면 100 주고, 사원의 이름, 부서이름, 직업 조회.
-- case when
select case when(e.comm is null) then 100 else comm end "보너스", e.ename "사원명", d.dname "부서명", e.job "직책"
from emp as e
inner join dept as d
on e.deptno = d.deptno;

-- if
select if(comm is null, 100, comm) as "보너스", e.ename "사원명", d.dname "부서명", e.job "직책"
from emp as e
inner join dept as d
on e.deptno = d.deptno;

-- 8. 부서명이 RESEARCH인 사원의 이름, 급여, 근무지역 조회.
select e.ename "사원명", e.sal "급여", d.loc "근무지역"
from emp as e
inner join dept as d
on e.deptno = d.deptno
where d.dname = "research";

-- 9. 보너스를 받은 사원 이름, 직책, 급여, 부서명 조회.
select e.ename "사원명", e.job "직책", e.sal "급여", d.dname "부서명"
from emp as e
inner join dept as d
on e.deptno = d.deptno
where comm is not null;

-- 10. 이름 첫글 A자를 가진 사원 이름, 직책, 부서명, 부서 위치 조회.
select e.ename "사원명", e.job "직책", d.dname "부서명", d.loc "근무지"
from emp as e
inner join dept as d
on e.deptno = d.deptno
where e.ename like "A%";

-- 11. 사원명, 사수번호, 사수 이름 조회. 단, 사수가 없는 사원도 포함
select bss.ename "사원명", bss.mgr as "사수번호", ss.ename as "사수명"
from emp as bss
left join emp as ss
on bss.mgr = ss.empno;

-- 12. 사원명, 사수번호, 사수 이름 조회. 단, 사수가 없는 사원만
select bss.ename "사원명", ss.empno "사수번호", ss.ename "사수명"
from emp as bss
left join emp as ss
on bss.mgr = ss.empno
where bss.mgr is null;

-- 13. 상사번호가 7698인 사원의 이름, 사원번호, 상사번호, 상사이름 조회.
select bss.ename "사원명", bss.empno "사원번호", bss.mgr "사수번호", ss.ename "사수명"
from emp as bss
inner join emp as ss
on bss.mgr = ss.empno
where bss.mgr = 7698;

-- 14. 상사보다 먼저 입사한 사원의 사원이름, 사원의 입사일, 상사 이름, 상사 입사일 조회.
select bss.ename "사원명", bss.hiredate "입사일", ss.ename "사수명", ss.hiredate "사수 입사일"
from emp as bss
inner join emp as ss
on bss.mgr = ss.empno
where bss.hiredate < ss.hiredate;

-- 15. 업무가 MANAGER이거나 CLERK고 입사날짜가 1982년에 입사한 사원의 사원번호, 이름, 급여, 직업, 부서명 조회.
select e.empno "사원번호", e.ename "사원명", e.sal "급여", e.job "직책", d.dname "부서명"
from emp as e
inner join dept as d
on e.deptno = d.deptno
where (job = "manager" or job = "clerk") and date_format(hiredate, "%Y") = 1982;

-- 16. 부서별 급여 총합 조회. 단, 사원이 존재하지 않는 부서도 포함해서 급여 순으로 내림차순 하시오.
select sum(e.sal) "급여총합", d.dname "부서명"
from emp as e
right join dept as d
on e.deptno = d.DEPTNO
group by d.dname
order by sum(sal) desc;

-- 17. 사원 이름, 상사 이름, 사원 부서번호, 사원 부서명, 사원 근무지역 조회. 단, 사원이 존재하지 않는 부서번호와 부서명도 조회.
select bss.ename "사원명", ss.ename "사수명", bss.deptno "부서번호", d.dname "부서명", d.loc "근무지역"
from emp as bss
inner join emp as ss
right join dept as d
on ss.empno = bss.mgr and bss.deptno = d.deptno;

-- 18. 부서 위치가 CHICAGO이고 사수 급여가 5000 미만인 사원 번호,사원 이름,사수 번호, 사수 이름, 사수 급여, 부서명 조회. 단, 사원의 입사날짜로 오름차순.
select bss.empno "사원번호", bss.ename "사원명", ss.empno "사수번호", ss.ename "사수이름", ss.sal "사수급여", d.dname "부서명"
from emp as bss
inner join emp as ss
inner join dept as d
on bss.mgr = ss.empno and bss.deptno = d.deptno
where d.loc = "chicago" and ss.sal < 5000
order by bss.hiredate asc;

-- 19. 입사날짜를 월별로 몇명이 입사했는지 카운트해서 조회.
select  date_format(hiredate, "%Y-%m") "입사월", count(*) "입사인원수"
from emp
group by date_format(hiredate, "%Y-%m");

-- 20. 부서번호, 부서이름, 부서 근무지, 사원 수 조회 단, 사원이 없는 부서도 조회할 수 있게
select d.deptno "부서번호", d.dname "부서명", d.loc "근무지역", count(*) "사원수"
from emp as e
right join dept as d
on e.deptno = d.deptno
group by d.deptno;

-- 21. 9월에 입사한 사원의 이름, 번호, 입사날짜 조회.
select ename "사원명", empno "사원번호", hiredate "입사일"
from emp
where date_format(hiredate, "%m") = 09;

-- 22. 직업이 SALESMAN 이고 입사날짜가 1981-02-22 이후에 들어온 사원들의 급여 총합, 급여평균 조회.
select sum(sal) "급여총합", avg(sal) "급여평균"
from emp
where job = "salesman" and hiredate >= "19810222";

-- 23. 사원번호 8080, 사원이름 홍길동, 직업 MANAGER, 입사날짜를 오늘날짜로 사원 추가하시오.
insert into emp(empno, ename, job, hiredate)
values (8080, "홍길동", "MANAGER", "2023-12-14");

-- 24. 사원번호 8080인 사원 사수번호를 7839로 급여를 500으로 수정하시오.
update emp
set mgr = 7839, sal = 500
where empno = 8080;

-- 25. 사원번호 8080인 사원을 삭제하시오.
delete from emp
where empno = 8080;

-- 26. 사원수가 4명 이상인 부서의 번호, 사원 수, 부서 이름, 부서 위치 조회.
select d.deptno "부서번호", count(*) "사원수", d.dname "부서명", d.loc "근무지역"
from emp as e
inner join dept as d
on e.deptno = d.deptno
group by d.deptno
having count(*) >= 4;

